name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

      # -----------------------------
      # Build & push backend services
      # -----------------------------
      - name: Build and push auth service
        run: |
          docker build -t $DOCKERHUB_USERNAME/restauranty-auth:latest ./backend/auth
          docker push $DOCKERHUB_USERNAME/restauranty-auth:latest

      - name: Build and push discounts service
        run: |
          docker build -t $DOCKERHUB_USERNAME/restauranty-discounts:latest ./backend/discounts
          docker push $DOCKERHUB_USERNAME/restauranty-discounts:latest

      - name: Build and push items service
        run: |
          docker build -t $DOCKERHUB_USERNAME/restauranty-items:latest ./backend/items
          docker push $DOCKERHUB_USERNAME/restauranty-items:latest

      # -----------------------------
      # Build & push frontend
      # -----------------------------
      - name: Build and push frontend
        run: |
          docker build -t $DOCKERHUB_USERNAME/restauranty-frontend:latest ./client
          docker push $DOCKERHUB_USERNAME/restauranty-frontend:latest

      # -----------------------------
      # Deploy to EKS
      # -----------------------------
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.31.0'

      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - name: Apply Kubernetes manifests
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl apply -f k8s/